@using Dovecord.Shared
@inject ISnackbar Snackbar

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.DeleteForever" Class="mr-3 mb-n1"/>
            Edit Channel?
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudTextField Value="@Channel.Id.ToString()" Label="Channel ID" ReadOnly="true"/>
        <MudTextField @bind-Value="ChannelName" Label="Channel Name" ReadOnly="false"/>
        @*
        <MudTextField Value="@channel.Location" Label="Location" ReadOnly="true"/>
        <MudTextField Value="@channel.IpAddress" Label="IP Address" ReadOnly="true"/>
    *@
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Error" OnClick="EditChannel">Confirm changes</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public EventCallback<Channel> EditChannelCallback { get; set; }
    [Parameter] public Channel Channel { get; set; } = new Channel();

    private string ChannelName = "";

    
    protected override void OnInitialized()
    {
        ChannelName = Channel.Name;
    }
    

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private async Task EditChannel()
    {
        //Channel.Name = ChannelName;
        Channel.Name = ChannelName;
        await EditChannelCallback.InvokeAsync(Channel);
        Snackbar.Add("Channel edited", Severity.Success);
        MudDialog.Close(DialogResult.Ok(Channel));
    }
}