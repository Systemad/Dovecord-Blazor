@page "/chat/{CurrentChannelId}"
@page "/chat"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]

<div class="d-flex flex-grow-1 flex-row" style="max-height:88vH;min-height:88vH">
    <MudHidden Breakpoint="Breakpoint.SmAndDown">
        <MudPaper Elevation="25" Class="pa-3 mr-6" MinWidth="250px">
            <MudButton EndIcon="@Icons.Material.Filled.Add" Color="Color.Secondary" FullWidth="true">Create Channel</MudButton>
            <MudList Clickable="true">
                @{
                        foreach (var channel in _channels)
                        {
                            <MudListItem Dense="true" OnClick="@(() =>LoadChannelChat(channel.Id))"># @channel.ChannelName</MudListItem>
                        }
                    }
            </MudList>
        </MudPaper>
    </MudHidden>
    <MudPaper Elevation="25" Class="py-4 flex-grow-1">
        <MudToolBar Dense="true">
            <MudHidden Breakpoint="Breakpoint.MdAndUp">
                <MudIconButton OnClick="@(() => OpenDrawer(Anchor.Left))" Icon="@Icons.Material.Outlined.Menu" Color="Color.Inherit" Class="mr-2 ml-n2" />
            </MudHidden>
            <MudText Typo="Typo.h6" Inline="true" Class="mr-2">#</MudText>
            <MudText Typo="Typo.h6">@headline</MudText>
            <MudSpacer />
            <MudIconButton Icon="@Icons.Material.Outlined.Notifications" />
            <MudIconButton Icon="@Icons.Material.Outlined.PushPin" />
            <MudHidden Breakpoint="Breakpoint.MdAndUp">
                <MudIconButton OnClick="@(() => OpenDrawer(Anchor.Right))" Icon="@Icons.Material.Outlined.PeopleAlt" Color="Color.Inherit" Class="ml-3" />
            </MudHidden>
        </MudToolBar>
        <div class="d-flex flex-column px-4" style="max-height:70vh; overflow:scroll;" id="chatContainer">
            
            @{
                @if (_messages is null)
                {
                    <p>Loading...</p>
                }
                else
                {
                    @foreach (var message in _messages)
                    {
                        <UserMessage Id="@message.Id.ToString()" ActorMessage="message"
                                     DeleteMessage="@DeleteMessageById"
                                     ActualUser="@CurrentUsername"/>
                            @*
                             EditMessage="@StartEdit"/> *@
                    }
                }
            }
            
            
        </div>
        <MudPaper Elevation="0" Style="margin-left: 15px">
            @{
                static string UsersTypingText(string[] usersTyping) => usersTyping?.Length switch
                {
                    0 => "&nbsp;",
                    1 => $"<strong>{usersTyping[0]}</strong> is typing...",
                    2 => $"<strong>${usersTyping[0]}</strong> and <strong>${usersTyping[1]}</strong> are typing...",
                    _ => "Multiple people are typing..."
                };

                MarkupString isTypingMarkup = new(UsersTypingText(_usersTyping?.Select(a => a.User).ToArray()));
                //<span class="text-muted @(_usersTyping is { Count: > 0 } ? "flashing" : "")">
                    @isTypingMarkup
                //</span>
            }
        </MudPaper>
        <MudPaper Class="d-flex flex-row px-2 mx-4" Style="background-color: var(--mud-palette-background-grey);">
            <MudIconButton Icon="@Icons.Material.Filled.AddCircle"></MudIconButton>
            
            <MudTextField AutoFocus="true" T="string" Placeholder="Enter your message..." DisableUnderLine="true" Class="mt-n2 mx-4"
                          Immediate="true" TextChanged="InitiateDebounceUserIsTyping" @bind-Value="_messageInput" />
            <MudButton OnClick="SendMessage" StartIcon="@Icons.Material.Outlined.Send" Color="Color.Secondary" ButtonType="ButtonType.Button">Send</MudButton>
        </MudPaper>
    </MudPaper>
    <MudHidden Breakpoint="Breakpoint.SmAndDown">
        <MudPaper Elevation="25" Class="pa-3 pb-16 ml-6" MinWidth="250px">
            @*<ChatUsers chatUsers="ChatUsers" />
            <MudListSubheader Class="ml-n2 mb-n4"><b>CORE TEAM</b> - @onlineUsers.Count()</MudListSubheader> *@
            <MudList Clickable="true">
                @*
                @foreach (var user in ChatUsers)
                {
                    <MudListItem Class="pa-0 px-2" OnClick="@(() => LoadUserChat(user.Id))">
                        <div class="d-flex flex-row mt-n1 mb-n1">
                            <div>
                                <MudText Typo="Typo.body2"><b>@user.Email</b></MudText>
                            </div>
                        </div>
                    </MudListItem>
                }
                *@
                <MudListSubheader Class="ml-n2 mb-n4"><b>OFFLINE</b></MudListSubheader>
            </MudList>
        </MudPaper>
    </MudHidden>
</div>

<MudDrawer @bind-Open="@open" Anchor="@ChatDrawer" Elevation="1" Variant="@DrawerVariant.Temporary">
    @if (ChatDrawer == Anchor.Left)
    {
        <MudButton EndIcon="@Icons.Material.Filled.Add" Color="Color.Secondary" Class="mx-4 mt-6 mb-4">Create Channel</MudButton>
        <ChatChannels Channels="_channels" />
    }
    else if (ChatDrawer == Anchor.Right)
    {
        <div class="pa-3">
            <ChatUsers chatUsers="ChatUsers" />
        </div>
    }
</MudDrawer>

@code
{
    bool open;
    Anchor ChatDrawer { get; set; }

    void OpenDrawer(Anchor anchor)
    {
        ChatDrawer = anchor;
        open = true;
    }
    
    
    public string headline { get; set; }
    
    public string IconGift { get; set; } = "<path d=\"M22,12V20A2,2 0 0,1 20,22H4A2,2 0 0,1 2,20V12A1,1 0 0,1 1,11V8A2,2 0 0,1 3,6H6.17C6.06,5.69 6,5.35 6,5A3,3 0 0,1 9,2C10,2 10.88,2.5 11.43,3.24V3.23L12,4L12.57,3.23V3.24C13.12,2.5 14,2 15,2A3,3 0 0,1 18,5C18,5.35 17.94,5.69 17.83,6H21A2,2 0 0,1 23,8V11A1,1 0 0,1 22,12M4,20H11V12H4V20M20,20V12H13V20H20M9,4A1,1 0 0,0 8,5A1,1 0 0,0 9,6A1,1 0 0,0 10,5A1,1 0 0,0 9,4M15,4A1,1 0 0,0 14,5A1,1 0 0,0 15,6A1,1 0 0,0 16,5A1,1 0 0,0 15,4M3,8V10H11V8H3M13,8V10H21V8H13Z\" />";
    public string IconGif { get; set; } = "<path d=\"M11,8H13V16H11V8M7.67,8H4.33C3.53,8 3,8.67 3,9.33V14.67C3,15.33 3.53,16 4.33,16H7.67C8.47,16 9,15.33 9,14.67V12H7V14H5V10H9V9.33C9,8.67 8.47,8 7.67,8M21,10V8H15V16H17V14H19.5V12H17V10H21Z\" />";
}